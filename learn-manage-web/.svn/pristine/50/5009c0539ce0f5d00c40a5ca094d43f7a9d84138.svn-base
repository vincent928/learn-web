package com.learn.manage.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.learn.manage.mapper.LGradeMapper;
import com.learn.manage.mapper.LStudentMapper;
import com.learn.manage.mapper.LTeacherMapper;
import com.learn.manage.mapper.LUserMapper;
import com.learn.manage.pojo.LGrade;
import com.learn.manage.pojo.LGradeExample;
import com.learn.manage.pojo.LStudent;
import com.learn.manage.pojo.LStudentExample;
import com.learn.manage.pojo.LTeacher;
import com.learn.manage.pojo.LTeacherExample;
import com.learn.manage.pojo.LTeacherExample.Criteria;
import com.learn.manage.service.TeacherService;
import com.learn.manage.util.LearnResult;

@Service
public class TeacherServiceImpl implements TeacherService{

	@Autowired
	private LTeacherMapper lTeacherMapper;
	@Autowired
	private LUserMapper lUserMapper;
	@Autowired 
	private LGradeMapper lGradeMapper;
	@Autowired
	private LStudentMapper lStudentMapper;
	
	@Override
	public LearnResult getTeacherByToken(String token) {
		//token中存放的是用户id	
		LTeacherExample example=new LTeacherExample();
		Criteria criteria = example.createCriteria();
		criteria.andLIdEqualTo(Integer.parseInt(token));
		//取到教师信息
		List<LTeacher> list = lTeacherMapper.selectByExample(example);
		LTeacher lTeacher=new LTeacher();
		if (list.size()>0 && list!=null) {
			 lTeacher = list.get(0);
			return LearnResult.ok(lTeacher);
		}
		return LearnResult.ok(lTeacher);
	}

	//获取教师名下班级
	@Override
	public LearnResult getGradeAndClass(String tid) {
		List rows=new ArrayList<>();
		LTeacherExample eLTeacherExample=new LTeacherExample();
		Criteria criteria2 = eLTeacherExample.createCriteria();
		criteria2.andLIdEqualTo(Integer.parseInt(tid));
		List<LTeacher> teacherList = lTeacherMapper.selectByExample(eLTeacherExample);
		if (teacherList.size()>0 && teacherList!=null) {
			LTeacher teacher = teacherList.get(0);
			LGradeExample example=new LGradeExample();
			com.learn.manage.pojo.LGradeExample.Criteria criteria = example.createCriteria();
			criteria.andTIdEqualTo(teacher.gettId());
			List<LGrade> list = lGradeMapper.selectByExample(example);
			if (list.size()>0 && list!=null) {
				for (LGrade lGrade : list) {
					String gc=lGrade.getlGrade()+lGrade.getlClass();
					rows.add(gc);
				}
		}
		}
		return LearnResult.ok(rows);
	}

	@Override
	public LearnResult getStudentList(String grade) {
		//根据班级找到学生列表
		String[] strings = grade.split("级");
		String stuGrade=strings[0]+"级";
		String stuClass=strings[1];
		LStudentExample example=new LStudentExample();
		com.learn.manage.pojo.LStudentExample.Criteria criteria = example.createCriteria();
		criteria.andSGradeEqualTo(stuGrade);
		criteria.andSClassEqualTo(stuClass);
		List<LStudent> list = lStudentMapper.selectByExample(example);
		return LearnResult.ok(list);
	}

	
}
